
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: kconfigs.kconfigcontroller.atteg.com
spec:
  group: kconfigcontroller.atteg.com
  names:
    kind: Kconfig
    listKind: KconfigList
    plural: kconfigs
    singular: kconfig
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: Kconfig is the Schema for the kconfigs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KconfigSpec defines the desired state of Kconfig
          properties:
            envConfigs:
              items:
                description: EnvConfig represents a single environment variable configuration
                properties:
                  configMapKeyRef:
                    description: Selects a key from a ConfigMap.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its key must
                          be defined
                        type: boolean
                    required:
                    - key
                    type: object
                  fieldRef:
                    description: ObjectFieldSelector selects an APIVersioned field
                      of an object.
                    properties:
                      apiVersion:
                        description: Version of the schema the FieldPath is written
                          in terms of, defaults to "v1".
                        type: string
                      fieldPath:
                        description: Path of the field to select in the specified
                          API version.
                        type: string
                    required:
                    - fieldPath
                    type: object
                  key:
                    type: string
                  resourceFieldRef:
                    description: ResourceFieldSelector represents container resources
                      (cpu, memory) and their output format
                    properties:
                      containerName:
                        description: 'Container name: required for volumes, optional
                          for env vars'
                        type: string
                      divisor:
                        description: Specifies the output format of the exposed resources,
                          defaults to "1"
                        type: string
                      resource:
                        description: 'Required: resource to select'
                        type: string
                    required:
                    - resource
                    type: object
                  secretKeyRef:
                    description: SecretKeySelector selects a key of a Secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                  type:
                    description: Type should be immutable
                    type: string
                  value:
                    type: string
                required:
                - key
                type: object
              type: array
            level:
              type: integer
            selector:
              description: A label selector is a label query over a set of resources.
                The result of matchLabels and matchExpressions are ANDed. An empty
                label selector matches all objects. A null label selector matches
                no objects.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
          required:
          - envConfigs
          - level
          type: object
        status:
          description: KconfigStatus defines the observed state of Kconfig
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
